[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "precipapi"
version = "0.1.0"
description = "FastAPI backend for PrecipAPI, a precipitation data API"
authors = [
    {name = "Muugii Munkhbold", email = "mmunkhbold94@gmail.com"},
]
requires-python = ">= 3.11, < 3.13"

[tool.hatch.build.targets.wheel]
packages = ["app"]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "geoalchemy2>=0.14.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pandas>=2.1.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",  # for making API calls to NOAA/USGS
    "geopy>=2.4.0",   # for geocoding
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "ruff>=0.9",
    "black>=23.0.0",
    "mypy>=1.7.0",
]
testing = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "pytest-mock>=3.12.0",
]

[tool.ruff]
src = ["app", "tests"]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
extend-select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
# docstring-code-format opetion was removed in newer ruff versions

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.pytest.ini_options]
pythonpath = "."
addopts = [
    "--import-mode=importlib",
    "-v",
]
testpaths = ["tests"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
